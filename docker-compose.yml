version: "3.8"

services:
  app:
    build:
      context: .
    ports:
      - 8000:8000
    expose:
      - 8000
    volumes:
      - ./app:/app
    container_name: django_api_container
    image: app:django_api
    command: >
      sh -c "python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
#     command: gunicorn app.wsgi:application --bind 0.0.0.0:8000 --log-file - # replacing python server with gunicorn server
    environment:
      - DB_HOST=db
      - DB_NAME=recipes_api
      - DB_USER=postgres
      - DB_PASSWORD=supersecretpassword
      - DB_PORT=5432
    depends_on:
      - db
    links:
      - db:db
    networks:
      - djangonetwork
#     env_file:
#       - ./.env/local.env

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
      - POSTGRES_DB=recipes_api
    ports:
      - 5432:5432
    networks:
      - djangonetwork
    
#     image: mysql:5.7
#     environment:
#       MYSQL_DATABASE: 'django-app-db'
#       MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
#     volumes:
#       - ./data/mysql/db:/var/lib/mysql
    

volumes:
  postgres_data:

networks:
      djangonetwork:
          driver: bridge
